#!/bin/bash

################################################################################
# SQS - a simple queuing system                                                #
# Copyright (C) 2013 by Thomas Lauf                                            #
#                                                                              #
# This file is part of SQS.                                                    #
#                                                                              #
# SQS is free software: you can redistribute it and/or modify                  #
# it under the terms of the GNU General Public License as published by         #
# the Free Software Foundation, either version 3 of the License, or            #
# (at your option) any later version.                                          #
#                                                                              #
# SQS is distributed in the hope that it will be useful,                       #
# but WITHOUT ANY WARRANTY; without even the implied warranty of               #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                #
# GNU General Public License for more details.                                 #
#                                                                              #
# You should have received a copy of the GNU General Public License            #
# along with SQS.  If not, see <http://www.gnu.org/licenses/>.                 #
#                                                                              #
################################################################################

source sqscommon

#_______________________________________________________________________________
sqsr_add_to_runc()
{
  # add parameter to runner count
  # helper function used to increment or decrement runner count,
  # current runner count is returned.
  #
  local nrun=$(sqs get ${queue}/info/hosts ${host} 0)
  nrun=${nrun#*:}
  if [ ${1} -ne 0 ] ; then
    ((nrun=nrun+${1}))
    sqs set ${queue}/info/hosts ${host} ${nrun}
  fi
  echo ${nrun}
  return
}

queue=${1}
host=$(hostname)

if ! [ -d ${queue} ] ; then
  abort "sqsdispatch: queue '${queue}' does not exist! [${host}]"
fi

state=$(cat ${queue}/info/state)

if [ "${state}" != "run" ] ; then
  exit 0
fi

key="${host}.$$"
sqsguard lock ${queue} ${key} || exit $?

# retrieve runner count on host
nrun=$(sqs get ${queue}/info/hosts ${host} 0)
# retrieve number of allowed runners for host
nmax=$(sqs get ${queue}/info/nproc ${host} 0)

while [ true ] ; do
  # retrieve task count in queue
  ntask=$(ls ${queue}/wait 2>/dev/null | wc -l)

  if [ ${ntask} -eq 0 ] ; then
    debug "sqsdispatch: no more tasks in queue"
    break;
  fi

  debug "sqsdispatch: ${nrun} of ${nmax} processes [${host}]"

  if [ ${nrun} -ge ${nmax} ] ; then
    # exit loop if above maximum
    break
  else
    # seed runner if below maximum
    nrun=$(sqsr_add_to_runc 1)
    sqsrunner ${queue} &

    debug "sqsdispatch: spawning new sqsrunner ($!) [${host}]"
  fi
done

sqsguard unlock ${queue} ${key} || exit $?

exit 0
