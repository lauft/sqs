#! /bin/bash

################################################################################
# SQS - a simple queuing system                                                #
# Copyright (C) 2012 by Thomas Lauf                                            #
#                                                                              #
# This file is part of SQS.                                                    #
#                                                                              #
# SQS is free software: you can redistribute it and/or modify                  #
# it under the terms of the GNU General Public License as published by         #
# the Free Software Foundation, either version 3 of the License, or            #
# (at your option) any later version.                                          #
#                                                                              #
# SQS is distributed in the hope that it will be useful,                       #
# but WITHOUT ANY WARRANTY; without even the implied warranty of               #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                #
# GNU General Public License for more details.                                 #
#                                                                              #
# You should have received a copy of the GNU General Public License            #
# along with SQS.  If not, see <http://www.gnu.org/licenses/>.                 #
#                                                                              #
################################################################################

################################################################################
#                                                                              #
# Helper script for the SQS                                                    #
# Get and set configuration settings                                           #
# The config file has to be located in the                                     #
# same directory as this script!                                               #
# Configuration are stored as bash variables, i.e.                             #
# in the format <key>=<value>                                                  #
#                                                                              #
# USAGE:                                                                       #
#   sqs-config get KEY DEF                                                     #
#   sqs-config set KEY VAL                                                     #
#                                                                              #
################################################################################

# exit codes
E_SUCCESS=0
E_FAILURE=1

progname=${0}
progdir=${progname%/*}
progbase=${progname#${progdir}}
progbase=${progbase%%-*}

source ${progdir}/${progbase}common

function print_help()
{
  # print help about this command
  cat <<EOF
NAME
       ${0##*/} - <short description>

SYNOPSIS
       ${0##*/} [OPTION]... [ARGUMENT]...

DESCRIPTION
       Place a description of the command here. Followed by details about the
       individual options

       -<short-option>, --<long-option>
              Description of the specific option

   Exit status
       0  if OK,
       1  else.

AUTHOR
       Written by Thomas Lauf (lauf.thomas@tngtech.com)

SQS
       Part of the sqs suite
EOF
}

function print_descr()
{
  # a one-liner about this command
  echo "Get and set configuration."
}

# parse options/arguments
until [ -z "${1}" ] ; do
  case "${1}" in
    --describe)
      print_descr
      exit
      ;;
    --help)
      print_help
      exit
      ;;
    -*)
      abort "sqs-config: unknown option '${1}'"
      ;;
    *)
      if [ -z "${cmd}" ] ; then
        cmd=${1};
      elif [ -z "${key}" ] ; then
        key=${1};
      elif [ -z "${valdef}" ] ; then
        valdef=${1}
      else
        abort "sqs-config: unknown argument '${1}'"
      fi
      ;;
  esac
  shift
done

###############################################################################
if [[ -z "${cmd}" || -z "${key}" || -z "${valdef}" ]] ; then
  abort "sqs-config: wrong argument count: ${cmd} ${key} ${valdef}"
fi

cfgfile=${0%/*}/sqsconf

if [ ! -e ${cfgfile} ] ; then
  abort "sqs-config: cannot access config file (${cfgfile})"
fi

if [ "x${cmd}" = "xget" ] ; then
  # retrieve a value from the config file
  def=${valdef}
  val=$(grep ${key} ${cfgfile} 2>/dev/null)
  if [ "x${val}" = "x" ] ; then
    echo ${def}
  else
    echo ${val#*=}
  fi
elif [ "x${cmd}" = "xset" ] ; then
  # set a value in the config file
  val=${valdef}
  grep -v ${key} ${cfgfile} > ${cfgfile}.tmp 
  echo "${key}=${val}" >> ${cfgfile}.tmp || exit $?
  mv -f ${cfgfile}.tmp ${cfgfile}        || exit $?
else
  # invalid command
  abort "sqs-config: unknown command '${cmd}'"
fi

exit ${E_SUCCESS}

### EOF
